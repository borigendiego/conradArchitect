{"ast":null,"code":"var _jsxFileName = \"/Users/diegoborigen/Personal/Projects/ConradArchitect/conradArchitect/pages/projects/[project].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react'; //TODO: Add components\n\nimport AppContext from '../../components/AppContext'; //import ProjectDetails from '../../components/projects/project-details';\n\n/*export const getServerSideProps = async (context) => {\n    return {\n        props: {\n            id: context.query.id //pass it to the page props\n        }\n    }\n}*/\nconst Project = ({\n  projectId\n}) => {\n  _s();\n\n  const {\n    projectsData\n  } = useContext(AppContext);\n  useEffect(() => {\n    console.log(\">>effect\");\n  }, []);\n  const selectedProject = projectsData.filter(project => project.id === projectId);\n  console.log(\">>selectedProject\", selectedProject[0]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"PROj\");\n};\n\n_s(Project, \"W6whdNatztbdVWb0MVeZSjgGcUg=\");\n\n_c = Project;\nexport var __N_SSG = true;\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["/Users/diegoborigen/Personal/Projects/ConradArchitect/conradArchitect/pages/projects/[project].js"],"names":["React","useContext","useEffect","AppContext","Project","projectId","projectsData","console","log","selectedProject","filter","project","id"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C,C,CACA;;AAEA,OAAOC,UAAP,MAAuB,6BAAvB,C,CACA;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAmBL,UAAU,CAACE,UAAD,CAAnC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMC,eAAe,GAAGH,YAAY,CAACI,MAAb,CAAoBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeP,SAA9C,CAAxB;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCC,eAAe,CAAC,CAAD,CAAhD;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,CAbD;;GAAML,O;;KAAAA,O;;AAeN,eAAeA,OAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\n//TODO: Add components\nimport { getProjects } from '../../API';\nimport AppContext from '../../components/AppContext';\n//import ProjectDetails from '../../components/projects/project-details';\n\nexport const getStaticPaths = async () => {\n    const res = await getProjects();\n    const cleanBlankSpaces = (string) => string.replace(/\\s+/g, '-');\n\n    return {\n        paths: res.map(project => {\n            return {\n                params: {\n                    project: cleanBlankSpaces(project.name),\n                },\n            };\n        }),\n        fallback: false //indicates the type of fallback\n    }\n}\nexport const getStaticProps = async (context) => {\n    const projectId = context.params.project;\n\n    console.log(\">>context\", context)\n\n    return {\n        props: {\n            projectId: projectId,\n        }\n    }\n}\n\n/*export const getServerSideProps = async (context) => {\n    return {\n        props: {\n            id: context.query.id //pass it to the page props\n        }\n    }\n}*/\n\nconst Project = ({ projectId }) => {\n    const { projectsData } = useContext(AppContext);\n\n    useEffect(() => {\n        console.log(\">>effect\");\n    }, [])\n\n    const selectedProject = projectsData.filter(project => project.id === projectId);\n\n    console.log(\">>selectedProject\", selectedProject[0]);\n    return (\n        <div>PROj</div>\n    )\n}\n\nexport default Project;\n"]},"metadata":{},"sourceType":"module"}