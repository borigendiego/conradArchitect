{"ast":null,"code":"var _jsxFileName = \"/Users/diegoborigen/Personal/Projects/ConradArchitect/conradArchitect/pages/projects/[project].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react'; //TODO: Add components\n\nimport AppContext from '../../components/AppContext';\nimport ProjectDetails from '../../components/projects/project-details';\n\nconst Project = ({\n  projectId\n}) => {\n  _s();\n\n  const {\n    projectsData\n  } = useContext(AppContext);\n  const selectedProject = projectsData.filter(project => project.id === projectId);\n  console.log(\">>selectedProject\", selectedProject[0]);\n  return __jsx(ProjectDetails, {\n    project: selectedProject[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  });\n};\n\n_s(Project, \"bDi11o8Qb4qhXf2trUFeH2/9uNY=\");\n\n_c = Project;\nexport var __N_SSG = true;\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["/Users/diegoborigen/Personal/Projects/ConradArchitect/conradArchitect/pages/projects/[project].js"],"names":["React","useContext","useEffect","AppContext","ProjectDetails","Project","projectId","projectsData","selectedProject","filter","project","id","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C,C,CACA;;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,cAAP,MAA2B,2CAA3B;;AA6BA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAmBN,UAAU,CAACE,UAAD,CAAnC;AAEA,QAAMK,eAAe,GAAGD,YAAY,CAACE,MAAb,CAAoBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeL,SAA9C,CAAxB;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCL,eAAe,CAAC,CAAD,CAAhD;AACA,SACI,MAAC,cAAD;AAAgB,IAAA,OAAO,EAAEA,eAAe,CAAC,CAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CATD;;GAAMH,O;;KAAAA,O;;AAWN,eAAeA,OAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\n//TODO: Add components\nimport { getProjects } from '../../API';\nimport AppContext from '../../components/AppContext';\nimport ProjectDetails from '../../components/projects/project-details';\n\nexport const getStaticPaths = async () => {\n    const res = await getProjects();\n    const cleanBlankSpaces = (string) => string.replace(/\\s+/g, '-');\n\n    return {\n        paths: res.map(project => {\n            return {\n                params: {\n                    project: cleanBlankSpaces(project.name),\n                },\n            };\n        }),\n        fallback: false //indicates the type of fallback\n    }\n}\nexport const getStaticProps = async (context) => {\n    const projectId = context.params.project;\n\n    console.log(\">>context\", context)\n\n    return {\n        props: {\n            projectId: projectId,\n        }\n    }\n}\n\nconst Project = ({ projectId }) => {\n    const { projectsData } = useContext(AppContext);\n\n    const selectedProject = projectsData.filter(project => project.id === projectId);\n\n    console.log(\">>selectedProject\", selectedProject[0]);\n    return (\n        <ProjectDetails project={selectedProject[0]} />\n    )\n}\n\nexport default Project;\n"]},"metadata":{},"sourceType":"module"}