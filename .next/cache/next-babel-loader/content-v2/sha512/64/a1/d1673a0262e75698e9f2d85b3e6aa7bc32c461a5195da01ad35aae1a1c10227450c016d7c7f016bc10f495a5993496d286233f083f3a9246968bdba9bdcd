{"ast":null,"code":"var _jsxFileName = \"/Users/diegoborigen/Personal/Projects/ConradArchitect/conradArchitect/pages/projects/[project].js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react'; //TODO: Add components\n\nimport AppContext from '../../components/AppContext';\n\n/*export const getServerSideProps = async (context) => {\n    return {\n        props: {\n            id: context.query.id //pass it to the page props\n        }\n    }\n}*/\nconst Project = ({\n  id\n}) => {\n  _s();\n\n  console.log(\">>id\", id);\n  const {\n    projectsData\n  } = useContext(AppContext);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Proyect\"));\n};\n\n_s(Project, \"bDi11o8Qb4qhXf2trUFeH2/9uNY=\");\n\n_c = Project;\nexport var __N_SSG = true;\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["/Users/diegoborigen/Personal/Projects/ConradArchitect/conradArchitect/pages/projects/[project].js"],"names":["React","useContext","AppContext","Project","id","console","log","projectsData"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC,C,CACA;;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAAA;;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,EAApB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAmBN,UAAU,CAACC,UAAD,CAAnC;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ;AAKH,CATD;;GAAMC,O;;KAAAA,O;;AAWN,eAAeA,OAAf","sourcesContent":["import React, { useContext } from 'react';\n//TODO: Add components\nimport { getProjects } from '../../API';\nimport AppContext from '../../components/AppContext';\n\nexport const getStaticPaths = async () => {\n    const res = await getProjects();\n    const cleanBlankSpaces = (string) => string.replace(/\\s+/g, '-');\n\n    return {\n        paths: res.map(project => {\n            return {\n                params: {\n                    project: cleanBlankSpaces(project.name),\n                },\n            };\n        }),\n        fallback: false //indicates the type of fallback\n    }\n}\nexport const getStaticProps = async (context) => {\n    //const projectId = context.params.project;\n\n    return {\n        props: {\n            //id: context.query.id,\n            con: context\n        }\n    }\n}\n\n/*export const getServerSideProps = async (context) => {\n    return {\n        props: {\n            id: context.query.id //pass it to the page props\n        }\n    }\n}*/\n\nconst Project = ({ id }) => {\n    console.log(\">>id\", id)\n    const { projectsData } = useContext(AppContext);\n\n    return (\n        <div>\n            <h1>Proyect</h1>\n        </div>\n    )\n}\n\nexport default Project;\n"]},"metadata":{},"sourceType":"module"}