{"ast":null,"code":"var _jsxFileName = \"/Users/diegoborigen/Personal/Projects/ConradArchitect/conradArchitect/components/projects/Gallery.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Collapsible from 'react-collapsible'; // import {\n//     Link\n// } from 'react-router-dom';\n\nimport Link from 'next/link'; //Redux\n// import { connect } from 'react-redux';\n// import { getProjectsList } from '../../public/redux/selectors';\n// import { addProjectList, setSingleProject } from '../../public/redux/actions';\n//css\n\nimport styles from './gallery.module.scss'; //API\n\nimport { getProjects, getTempProjects } from './API';\n\nconst Gallery = props => {\n  const {\n    addProjectList,\n    setSingleProject,\n    projectsList\n  } = props;\n  const {\n    0: isExpanded,\n    1: setIsExpanded\n  } = useState(false);\n  let projects = [];\n  useEffect(() => {\n    getProjects().then(res => {\n      return projects = res;\n    }).catch(err => console.log('>>error', err));\n  }, [addProjectList]);\n  return __jsx(React.Fragment, null, !projectsList ? __jsx(\"div\", {\n    className: styles.images_wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }\n  }, getTempProjects().map((project, index) => __jsx(\"div\", {\n    key: index,\n    className: styles.slide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  }, __jsx(Link, {\n    href: '/projects',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }, __jsx(\"img\", {\n    className: styles.image,\n    alt: 'as',\n    src: project.main_image.url,\n    onClick: () => {\n      console.log(\">>DATA\", project[index]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 37\n    }\n  }))))) : __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }\n  }, \"No projects to display\"), projectsList && projectsList.length > 9 && __jsx(Collapsible, {\n    trigger: __jsx(\"h2\", {\n      onClick: () => {\n        setIsExpanded(!isExpanded);\n      },\n      className: styles.all_projects_cta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, isExpanded ? 'SEE LESS >' : 'SEE ALL PROJECTS >'),\n    classParentString: isExpanded ? 'expandedPanel' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: styles.more_images_wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, projectsList.slice(9, 20).map((project, index) => __jsx(\"div\", {\n    key: index,\n    className: `${styles.slide} more-slides`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, __jsx(Link, {\n    to: '/projects',\n    onClick: () => setSingleProject(index + 3),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, __jsx(\"img\", {\n    className: styles.image,\n    alt: 'as',\n    src: project.main_image.url,\n    onClick: () => setSingleProject(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 37\n    }\n  })))))));\n};\n\nexport default Gallery;","map":{"version":3,"sources":["/Users/diegoborigen/Personal/Projects/ConradArchitect/conradArchitect/components/projects/Gallery.js"],"names":["React","useState","useEffect","Collapsible","Link","styles","getProjects","getTempProjects","Gallery","props","addProjectList","setSingleProject","projectsList","isExpanded","setIsExpanded","projects","then","res","catch","err","console","log","images_wrapper","map","project","index","slide","image","main_image","url","length","all_projects_cta","more_images_wrapper","slice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Collapsible from 'react-collapsible';\n// import {\n//     Link\n// } from 'react-router-dom';\nimport Link from 'next/link';\n\n//Redux\n// import { connect } from 'react-redux';\n// import { getProjectsList } from '../../public/redux/selectors';\n// import { addProjectList, setSingleProject } from '../../public/redux/actions';\n//css\nimport styles from './gallery.module.scss';\n//API\nimport { getProjects, getTempProjects } from './API';\n\nconst Gallery = (props) => {\n    const { addProjectList, setSingleProject, projectsList } = props;\n    const [isExpanded, setIsExpanded] = useState(false);\n    let projects = [];\n\n    useEffect(() => {\n        getProjects()\n            .then(res => {\n                return projects = res;\n            })\n            .catch(err => console.log('>>error', err))\n    }, [addProjectList]);\n\n    return (\n        <>\n            {\n                !projectsList\n                    ? <div className={styles.images_wrapper}>\n                        {getTempProjects().map((project, index) =>\n                            <div\n                                key={index}\n                                className={styles.slide}\n                            >\n                                <Link href={'/projects'}>\n                                    <img className={styles.image} alt={'as'} src={project.main_image.url}\n                                         onClick={() => { console.log(\">>DATA\", project[index]) }}\n                                    />\n                                </Link>\n                            </div>\n                        )}\n                    </div>\n                    : <h4>No projects to display</h4>\n            }\n\n            {\n                projectsList && projectsList.length > 9 &&\n                <Collapsible\n                    trigger={\n                        <h2\n                            onClick={() => {setIsExpanded(!isExpanded)}}\n                            className={styles.all_projects_cta}\n                        >\n                            {isExpanded ? 'SEE LESS >' : 'SEE ALL PROJECTS >'}\n                        </h2>\n                    }\n                    classParentString={isExpanded ? 'expandedPanel' : ''}\n                >\n                    <div className={styles.more_images_wrapper}>\n                       {/* //TODO: check logic about index when select a project*/}\n                        {projectsList.slice(9,20).map((project, index) =>\n                            <div\n                                key={index}\n                                className={`${styles.slide} more-slides`}\n                            >\n                                <Link to={'/projects'} onClick={() => setSingleProject(index + 3)}>\n                                    <img className={styles.image} alt={'as'} src={project.main_image.url}\n                                         onClick={() => setSingleProject(index)}\n                                    />\n                                </Link>\n                            </div>\n                        )}\n                    </div>\n                </Collapsible>\n            }\n        </>\n    )\n};\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}