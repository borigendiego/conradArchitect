{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\n\nconst cleanBlankSpaces = string => string.replace(/\\s+/g, '-');\n\nconst getHomeBannerImages = () => {\n  return axios.get(`https://wp.conradarchitect.com/wp-json/wp/v2/home`).then(response => {\n    return response.data[0].gallery_images.map((element, index) => ({\n      id: index + 1,\n      alt: `Project ${index} main view`,\n      img: element\n    }));\n  }).catch(err => console.log('>>error', err));\n};\n\nconst getProjects = () => {\n  return axios.get(`https://wp.conradarchitect.com/wp-json/wp/v2/projects`).then(response => {\n    return response.data.map((project, index) => _objectSpread(_objectSpread({}, project.acf), {}, {\n      gallery: project.gallery_images,\n      id: cleanBlankSpaces(project.acf.name),\n      projectIndex: index\n    }));\n  }).catch(err => console.log('>>error', err));\n};\n\nexport { getProjects, getHomeBannerImages };","map":null,"metadata":{},"sourceType":"module"}