{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\hipposoft\\\\conradArchitect\\\\pages\\\\projects\\\\[project].js\";\nimport React, { useContext } from 'react'; //TODO: Add components\n\nimport { getProjects } from '../../API';\nimport AppContext from '../../components/AppContext';\nimport ProjectDetails from '../../components/projects/project-details';\nexport const getStaticPaths = async () => {\n  const res = await getProjects();\n\n  const cleanBlankSpaces = string => string.replace(/\\s+/g, '-');\n\n  return {\n    paths: res.map(project => {\n      return {\n        params: {\n          project: cleanBlankSpaces(project.name)\n        }\n      };\n    }),\n    fallback: false //indicates the type of fallback\n\n  };\n};\nexport const getStaticProps = async context => {\n  const projectId = context.params.project;\n  return {\n    props: {\n      projectId: projectId\n    }\n  };\n};\n\nconst Project = ({\n  projectId\n}) => {\n  const {\n    projectsData\n  } = useContext(AppContext);\n  const selectedProject = projectsData.filter(project => project.id === projectId);\n  return /*#__PURE__*/_jsxDEV(ProjectDetails, {\n    project: selectedProject[0]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Project;","map":{"version":3,"sources":["C:/Users/Admin/Documents/hipposoft/conradArchitect/pages/projects/[project].js"],"names":["React","useContext","getProjects","AppContext","ProjectDetails","getStaticPaths","res","cleanBlankSpaces","string","replace","paths","map","project","params","name","fallback","getStaticProps","context","projectId","props","Project","projectsData","selectedProject","filter","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC,C,CACA;;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AAEA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACtC,QAAMC,GAAG,GAAG,MAAMJ,WAAW,EAA7B;;AACA,QAAMK,gBAAgB,GAAIC,MAAD,IAAYA,MAAM,CAACC,OAAP,CAAe,MAAf,EAAuB,GAAvB,CAArC;;AAEA,SAAO;AACHC,IAAAA,KAAK,EAAEJ,GAAG,CAACK,GAAJ,CAAQC,OAAO,IAAI;AACtB,aAAO;AACHC,QAAAA,MAAM,EAAE;AACJD,UAAAA,OAAO,EAAEL,gBAAgB,CAACK,OAAO,CAACE,IAAT;AADrB;AADL,OAAP;AAKH,KANM,CADJ;AAQHC,IAAAA,QAAQ,EAAE,KARP,CAQa;;AARb,GAAP;AAUH,CAdM;AAgBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC7C,QAAMC,SAAS,GAAGD,OAAO,CAACJ,MAAR,CAAeD,OAAjC;AAEA,SAAO;AACHO,IAAAA,KAAK,EAAE;AACHD,MAAAA,SAAS,EAAEA;AADR;AADJ,GAAP;AAKH,CARM;;AAUP,MAAME,OAAO,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAmB;AAC/B,QAAM;AAAEG,IAAAA;AAAF,MAAmBpB,UAAU,CAACE,UAAD,CAAnC;AAEA,QAAMmB,eAAe,GAAGD,YAAY,CAACE,MAAb,CAAoBX,OAAO,IAAIA,OAAO,CAACY,EAAR,KAAeN,SAA9C,CAAxB;AAEA,sBACI,QAAC,cAAD;AAAgB,IAAA,OAAO,EAAEI,eAAe,CAAC,CAAD;AAAxC;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CARD;;AAUA,eAAeF,OAAf","sourcesContent":["import React, { useContext } from 'react';\r\n//TODO: Add components\r\nimport { getProjects } from '../../API';\r\nimport AppContext from '../../components/AppContext';\r\nimport ProjectDetails from '../../components/projects/project-details';\r\n\r\nexport const getStaticPaths = async () => {\r\n    const res = await getProjects();\r\n    const cleanBlankSpaces = (string) => string.replace(/\\s+/g, '-');\r\n\r\n    return {\r\n        paths: res.map(project => {\r\n            return {\r\n                params: {\r\n                    project: cleanBlankSpaces(project.name),\r\n                },\r\n            };\r\n        }),\r\n        fallback: false //indicates the type of fallback\r\n    }\r\n}\r\n\r\nexport const getStaticProps = async (context) => {\r\n    const projectId = context.params.project;\r\n\r\n    return {\r\n        props: {\r\n            projectId: projectId,\r\n        }\r\n    }\r\n}\r\n\r\nconst Project = ({ projectId }) => {\r\n    const { projectsData } = useContext(AppContext);\r\n\r\n    const selectedProject = projectsData.filter(project => project.id === projectId);\r\n\r\n    return (\r\n        <ProjectDetails project={selectedProject[0]} />\r\n    )\r\n}\r\n\r\nexport default Project;\r\n"]},"metadata":{},"sourceType":"module"}