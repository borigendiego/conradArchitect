{"ast":null,"code":"var _jsxFileName = \"/Users/diegoborigen/Personal/Projects/ConradArchitect/conradArchitect/components/projects/Gallery.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport Collapsible from 'react-collapsible'; // import {\n//     Link\n// } from 'react-router-dom';\n\nimport Link from 'next/link';\nimport AppContext from '../AppContext'; //css\n\nimport styles from './gallery.module.scss'; //API\n\nimport { getProjects, getTempProjects } from './API';\nexport const getStaticProps = async context => {\n  const res = await getProjects();\n  return {\n    props: {\n      data: {\n        name: res\n      }\n    }\n  };\n};\n\nconst Gallery = ({\n  data\n}) => {\n  _s();\n\n  const {\n    userName,\n    projectsData\n  } = useContext(AppContext);\n  console.log(\">>userName\", userName);\n  console.log(\">>projectsData\", projectsData);\n  const {\n    0: isExpanded,\n    1: setIsExpanded\n  } = useState(false);\n\n  const cleanBlankSpaces = string => string.replace(/\\s+/g, '-');\n  /*useEffect(() => {\n      getProjects()\n          .then(res => {\n              return addProjectList(res);\n          })\n          .catch(err => console.log('>>error', err))\n  }, [addProjectList]);*/\n\n\n  return __jsx(React.Fragment, null, !projectsData ? __jsx(\"div\", {\n    className: styles.images_wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }, projectsData.map((project, index) => __jsx(\"div\", {\n    key: index,\n    className: styles.slide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, __jsx(Link, {\n    href: `/projects/${cleanBlankSpaces(project.name)}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 33\n    }\n  }, __jsx(\"img\", {\n    className: styles.image,\n    alt: 'as',\n    src: project.main_image.url,\n    onClick: () => {\n      console.log(\">>DATA\", project[index]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 37\n    }\n  }))))) : __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }\n  }, \"No projects to display\"), projectsData && projectsData.length > 9 && __jsx(Collapsible, {\n    trigger: __jsx(\"h2\", {\n      onClick: () => {\n        setIsExpanded(!isExpanded);\n      },\n      className: styles.all_projects_cta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, isExpanded ? 'SEE LESS >' : 'SEE ALL PROJECTS >'),\n    classParentString: isExpanded ? 'expandedPanel' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: styles.more_images_wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, data.slice(9, 20).map((project, index) => __jsx(\"div\", {\n    key: index,\n    className: `${styles.slide} more-slides`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  })))));\n};\n\n_s(Gallery, \"JY/J/DQt7NgXz8MhjGFsa0TB2Ro=\");\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/diegoborigen/Personal/Projects/ConradArchitect/conradArchitect/components/projects/Gallery.js"],"names":["React","useState","useEffect","useContext","Collapsible","Link","AppContext","styles","getProjects","getTempProjects","getStaticProps","context","res","props","data","name","Gallery","userName","projectsData","console","log","isExpanded","setIsExpanded","cleanBlankSpaces","string","replace","images_wrapper","map","project","index","slide","image","main_image","url","length","all_projects_cta","more_images_wrapper","slice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport Collapsible from 'react-collapsible';\n// import {\n//     Link\n// } from 'react-router-dom';\nimport Link from 'next/link';\nimport AppContext from '../AppContext';\n//css\nimport styles from './gallery.module.scss';\n//API\nimport { getProjects, getTempProjects } from './API';\n\nexport const getStaticProps = async (context) => {\n    const res = await getProjects();\n\n    return {\n        props: {\n            data: {\n                name: res\n            }\n        }\n    }\n}\n\nconst Gallery = ({ data }) => {\n    const { userName, projectsData } = useContext(AppContext);\n    console.log(\">>userName\", userName);\n    console.log(\">>projectsData\", projectsData);\n    const [isExpanded, setIsExpanded] = useState(false);\n    const cleanBlankSpaces = (string) => string.replace(/\\s+/g, '-');\n\n    /*useEffect(() => {\n        getProjects()\n            .then(res => {\n                return addProjectList(res);\n            })\n            .catch(err => console.log('>>error', err))\n    }, [addProjectList]);*/\n\n    return (\n        <>\n            {\n                !projectsData\n                    ? <div className={styles.images_wrapper}>\n                        {projectsData.map((project, index) =>\n                            <div\n                                key={index}\n                                className={styles.slide}\n                            >\n                                <Link\n                                    href={`/projects/${cleanBlankSpaces(project.name)}`}\n\n                                >\n                                    <img className={styles.image} alt={'as'} src={project.main_image.url}\n                                         onClick={() => { console.log(\">>DATA\", project[index]) }}\n                                    />\n                                </Link>\n                            </div>\n                        )}\n                    </div>\n                    : <h4>No projects to display</h4>\n            }\n\n            {\n                projectsData && projectsData.length > 9 &&\n                <Collapsible\n                    trigger={\n                        <h2\n                            onClick={() => {setIsExpanded(!isExpanded)}}\n                            className={styles.all_projects_cta}\n                        >\n                            {isExpanded ? 'SEE LESS >' : 'SEE ALL PROJECTS >'}\n                        </h2>\n                    }\n                    classParentString={isExpanded ? 'expandedPanel' : ''}\n                >\n                    <div className={styles.more_images_wrapper}>\n                       {/* //TODO: check logic about index when select a project*/}\n                        {data.slice(9,20).map((project, index) =>\n                            <div\n                                key={index}\n                                className={`${styles.slide} more-slides`}\n                            >\n                                {/*<Link to={'/projects'} onClick={() => setSingleProject(index + 3)}>\n                                    <img className={styles.image} alt={'as'} src={project.main_image.url}\n                                         onClick={() => setSingleProject(index)}\n                                    />\n                                </Link>*/}\n                            </div>\n                        )}\n                    </div>\n                </Collapsible>\n            }\n        </>\n    )\n};\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}