{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\hipposoft\\\\conradArchitect\\\\components\\\\projects\\\\Gallery.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Collapsible from 'react-collapsible';\nimport { Link } from 'react-router-dom'; //Redux\n// import { connect } from 'react-redux';\n// import { getProjectsList } from '../../public/redux/selectors';\n// import { addProjectList, setSingleProject } from '../../public/redux/actions';\n//css\n\nimport './gallery.module.scss'; //API\n\nimport { getProjects } from './API';\n\nconst Gallery = props => {\n  _s();\n\n  const {\n    addProjectList,\n    setSingleProject,\n    projectsList\n  } = props;\n  const {\n    0: isExpanded,\n    1: setIsExpanded\n  } = useState(false);\n  useEffect(() => {\n    getProjects().then(res => {\n      return addProjectList(res);\n    }).catch(err => console.log('>>error', err));\n  }, [addProjectList]);\n  return __jsx(React.Fragment, null, projectsList ? __jsx(\"div\", {\n    className: 'images-wrapper',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }\n  }, projectsList.slice(0, 9).map((project, index) => __jsx(\"div\", {\n    key: index,\n    className: 'gallery-slide',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  }, __jsx(Link, {\n    to: '/projects',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }\n  }, __jsx(\"img\", {\n    className: 'gallery-image',\n    alt: 'as',\n    src: project.main_image.url,\n    onClick: () => setSingleProject(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 37\n    }\n  }))))) : __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 23\n    }\n  }, \"No projects to display\"), projectsList && projectsList.length > 9 && __jsx(Collapsible, {\n    trigger: __jsx(\"h2\", {\n      onClick: () => {\n        setIsExpanded(!isExpanded);\n      },\n      className: 'all-projects-cta',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, isExpanded ? 'SEE LESS >' : 'SEE ALL PROJECTS >'),\n    classParentString: isExpanded ? 'expandedPanel' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: 'more-images-wrapper',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, projectsList.slice(9, 20).map((project, index) => __jsx(\"div\", {\n    key: index,\n    className: 'gallery-slide more-slides',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, __jsx(Link, {\n    to: '/projects',\n    onClick: () => setSingleProject(index + 3),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, __jsx(\"img\", {\n    className: 'gallery-image',\n    alt: 'as',\n    src: project.main_image.url,\n    onClick: () => setSingleProject(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 37\n    }\n  })))))));\n};\n\n_s(Gallery, \"Pt9BFJk6g6Zfr+NmN7bkLV1oDSM=\");\n\n_c = Gallery;\nexport default Gallery; // const mapStateToProps = (state) => ({\n//     projectsList: getProjectsList(state),\n// });\n//\n// const mapDispatchToProps = (dispatch) => ({\n//     addProjectList: (values) => dispatch(addProjectList(values)),\n//     setSingleProject: (projectId) => dispatch(setSingleProject(projectId)),\n// });\n//\n// export default connect(\n//     mapStateToProps,\n//     mapDispatchToProps\n// )(Gallery)\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/hipposoft/conradArchitect/components/projects/Gallery.js"],"names":["React","useState","useEffect","Collapsible","Link","getProjects","Gallery","props","addProjectList","setSingleProject","projectsList","isExpanded","setIsExpanded","then","res","catch","err","console","log","slice","map","project","index","main_image","url","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Collapsible from 'react-collapsible';\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\n//Redux\r\n// import { connect } from 'react-redux';\r\n// import { getProjectsList } from '../../public/redux/selectors';\r\n// import { addProjectList, setSingleProject } from '../../public/redux/actions';\r\n//css\r\nimport './gallery.module.scss';\r\n//API\r\nimport { getProjects } from './API';\r\n\r\nconst Gallery = (props) => {\r\n    const { addProjectList, setSingleProject, projectsList } = props;\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getProjects()\r\n            .then(res => {\r\n                return addProjectList(res);\r\n            })\r\n            .catch(err => console.log('>>error', err))\r\n    }, [addProjectList]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                projectsList\r\n                    ? <div className={'images-wrapper'}>\r\n                        {projectsList.slice(0,9).map((project, index) =>\r\n                            <div\r\n                                key={index}\r\n                                className={'gallery-slide'}\r\n                            >\r\n                                <Link to={'/projects'}>\r\n                                    <img className={'gallery-image'} alt={'as'} src={project.main_image.url}\r\n                                         onClick={() => setSingleProject(index)}\r\n                                    />\r\n                                </Link>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    : <h4>No projects to display</h4>\r\n            }\r\n\r\n            {\r\n                projectsList && projectsList.length > 9 &&\r\n                <Collapsible\r\n                    trigger={\r\n                        <h2\r\n                            onClick={() => {setIsExpanded(!isExpanded)}}\r\n                            className={'all-projects-cta'}\r\n                        >\r\n                            {isExpanded ? 'SEE LESS >' : 'SEE ALL PROJECTS >'}\r\n                        </h2>\r\n                    }\r\n                    classParentString={isExpanded ? 'expandedPanel' : ''}\r\n                >\r\n                    <div className={'more-images-wrapper'}>\r\n                       {/* //TODO: check logic about index when select a project*/}\r\n                        {projectsList.slice(9,20).map((project, index) =>\r\n                            <div\r\n                                key={index}\r\n                                className={'gallery-slide more-slides'}\r\n                            >\r\n                                <Link to={'/projects'} onClick={() => setSingleProject(index + 3)}>\r\n                                    <img className={'gallery-image'} alt={'as'} src={project.main_image.url}\r\n                                         onClick={() => setSingleProject(index)}\r\n                                    />\r\n                                </Link>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </Collapsible>\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Gallery;\r\n\r\n// const mapStateToProps = (state) => ({\r\n//     projectsList: getProjectsList(state),\r\n// });\r\n//\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//     addProjectList: (values) => dispatch(addProjectList(values)),\r\n//     setSingleProject: (projectId) => dispatch(setSingleProject(projectId)),\r\n// });\r\n//\r\n// export default connect(\r\n//     mapStateToProps,\r\n//     mapDispatchToProps\r\n// )(Gallery)\r\n"]},"metadata":{},"sourceType":"module"}