{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport { PROJECTS_DATA } from './constants';\n\nconst getProjects = () => {\n  return axios.get(`${process.env.REACT_APP_API_URL}/projects`).then(response => {\n    return response.data.map(element => _objectSpread(_objectSpread({}, element.acf), {}, {\n      gallery: element.gallery_images\n    }));\n  }).catch(err => console.log('>>error', err));\n}; //TODO: This will be removed\n\n\nconst getTempProjects = () => {\n  return PROJECTS_DATA.data.map(element => _objectSpread(_objectSpread({}, element.acf), {}, {\n    gallery: element.gallery_images\n  }));\n};\n\nexport { getProjects, getTempProjects };","map":{"version":3,"sources":["/Users/diegoborigen/Personal/Projects/ConradArchitect/conradArchitect/components/projects/API/index.js"],"names":["axios","PROJECTS_DATA","getProjects","get","process","env","REACT_APP_API_URL","then","response","data","map","element","acf","gallery","gallery_images","catch","err","console","log","getTempProjects"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,aAA9B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACtB,SACIF,KAAK,CAACG,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,WAA3C,EACCC,IADD,CACOC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,OAAO,oCAErBA,OAAO,CAACC,GAFa;AAGxBC,MAAAA,OAAO,EAAEF,OAAO,CAACG;AAHO,MAAzB,CAAP;AAMH,GARD,EASCC,KATD,CASOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB,CATd,CADJ;AAYH,CAbD,C,CAeA;;;AACA,MAAMG,eAAe,GAAG,MAAM;AAC1B,SAAOlB,aAAa,CAACQ,IAAd,CAAmBC,GAAnB,CAAuBC,OAAO,oCAE1BA,OAAO,CAACC,GAFkB;AAG7BC,IAAAA,OAAO,EAAEF,OAAO,CAACG;AAHY,IAA9B,CAAP;AAMH,CAPD;;AASA,SACIZ,WADJ,EAEIiB,eAFJ","sourcesContent":["import axios from 'axios';\nimport { PROJECTS_DATA } from './constants';\n\nconst getProjects = () => {\n    return (\n        axios.get(`${process.env.REACT_APP_API_URL}/projects`)\n        .then((response) => {\n            return response.data.map(element =>\n                ({\n                    ...element.acf,\n                    gallery: element.gallery_images,\n                })\n            );\n        })\n        .catch(err => console.log('>>error', err))\n    )\n};\n\n//TODO: This will be removed\nconst getTempProjects = () => {\n    return PROJECTS_DATA.data.map(element =>\n        ({\n            ...element.acf,\n            gallery: element.gallery_images,\n        })\n    );\n}\n\nexport {\n    getProjects,\n    getTempProjects,\n}\n"]},"metadata":{},"sourceType":"module"}