{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\hipposoft\\\\conradArchitect\\\\components\\\\projects\\\\Gallery.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Collapsible from 'react-collapsible'; // import {\n//     Link\n// } from 'react-router-dom';\n\nimport Link from 'next/link'; //Redux\n// import { connect } from 'react-redux';\n// import { getProjectsList } from '../../public/redux/selectors';\n// import { addProjectList, setSingleProject } from '../../public/redux/actions';\n//css\n\nimport styles from './gallery.module.scss'; //API\n\nimport { getProjects, getTempProjects } from './API';\n\nconst Gallery = props => {\n  _s();\n\n  const {\n    addProjectList,\n    setSingleProject,\n    projectsList\n  } = props;\n  const {\n    0: isExpanded,\n    1: setIsExpanded\n  } = useState(false);\n  /*useEffect(() => {\r\n      getProjects()\r\n          .then(res => {\r\n              return addProjectList(res);\r\n          })\r\n          .catch(err => console.log('>>error', err))\r\n  }, [addProjectList]);*/\n\n  return __jsx(React.Fragment, null, !projectsList ? __jsx(\"div\", {\n    className: styles.images_wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }\n  }, getTempProjects().map((project, index) => __jsx(\"div\", {\n    key: index,\n    className: styles.slide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }, __jsx(Link, {\n    href: '/projects',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }\n  }, __jsx(\"img\", {\n    className: styles.image,\n    alt: 'as',\n    src: project.main_image.url,\n    onClick: () => {\n      console.log(\">>DATA\", project[index]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 37\n    }\n  }))))) : __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }\n  }, \"No projects to display\"), projectsList && projectsList.length > 9 && __jsx(Collapsible, {\n    trigger: __jsx(\"h2\", {\n      onClick: () => {\n        setIsExpanded(!isExpanded);\n      },\n      className: styles.all_projects_cta,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, isExpanded ? 'SEE LESS >' : 'SEE ALL PROJECTS >'),\n    classParentString: isExpanded ? 'expandedPanel' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: styles.more_images_wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, projectsList.slice(9, 20).map((project, index) => __jsx(\"div\", {\n    key: index,\n    className: 'gallery-slide more-slides',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, __jsx(Link, {\n    to: '/projects',\n    onClick: () => setSingleProject(index + 3),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, __jsx(\"img\", {\n    className: 'gallery-image',\n    alt: 'as',\n    src: project.main_image.url,\n    onClick: () => setSingleProject(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 37\n    }\n  })))))));\n};\n\n_s(Gallery, \"FPNvbbHVlWWR4LKxxNntSxiIS38=\");\n\n_c = Gallery;\nexport default Gallery; // const mapStateToProps = (state) => ({\n//     projectsList: getProjectsList(state),\n// });\n//\n// const mapDispatchToProps = (dispatch) => ({\n//     addProjectList: (values) => dispatch(addProjectList(values)),\n//     setSingleProject: (projectId) => dispatch(setSingleProject(projectId)),\n// });\n//\n// export default connect(\n//     mapStateToProps,\n//     mapDispatchToProps\n// )(Gallery)\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/hipposoft/conradArchitect/components/projects/Gallery.js"],"names":["React","useState","useEffect","Collapsible","Link","styles","getProjects","getTempProjects","Gallery","props","addProjectList","setSingleProject","projectsList","isExpanded","setIsExpanded","images_wrapper","map","project","index","slide","image","main_image","url","console","log","length","all_projects_cta","more_images_wrapper","slice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Collapsible from 'react-collapsible';\r\n// import {\r\n//     Link\r\n// } from 'react-router-dom';\r\nimport Link from 'next/link';\r\n\r\n//Redux\r\n// import { connect } from 'react-redux';\r\n// import { getProjectsList } from '../../public/redux/selectors';\r\n// import { addProjectList, setSingleProject } from '../../public/redux/actions';\r\n//css\r\nimport styles from './gallery.module.scss';\r\n//API\r\nimport { getProjects, getTempProjects } from './API';\r\n\r\nconst Gallery = (props) => {\r\n    const { addProjectList, setSingleProject, projectsList } = props;\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n    /*useEffect(() => {\r\n        getProjects()\r\n            .then(res => {\r\n                return addProjectList(res);\r\n            })\r\n            .catch(err => console.log('>>error', err))\r\n    }, [addProjectList]);*/\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !projectsList\r\n                    ? <div className={styles.images_wrapper}>\r\n                        {getTempProjects().map((project, index) =>\r\n                            <div\r\n                                key={index}\r\n                                className={styles.slide}\r\n                            >\r\n                                <Link href={'/projects'}>\r\n                                    <img className={styles.image} alt={'as'} src={project.main_image.url}\r\n                                         onClick={() => { console.log(\">>DATA\", project[index]) }}\r\n                                    />\r\n                                </Link>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    : <h4>No projects to display</h4>\r\n            }\r\n\r\n            {\r\n                projectsList && projectsList.length > 9 &&\r\n                <Collapsible\r\n                    trigger={\r\n                        <h2\r\n                            onClick={() => {setIsExpanded(!isExpanded)}}\r\n                            className={styles.all_projects_cta}\r\n                        >\r\n                            {isExpanded ? 'SEE LESS >' : 'SEE ALL PROJECTS >'}\r\n                        </h2>\r\n                    }\r\n                    classParentString={isExpanded ? 'expandedPanel' : ''}\r\n                >\r\n                    <div className={styles.more_images_wrapper}>\r\n                       {/* //TODO: check logic about index when select a project*/}\r\n                        {projectsList.slice(9,20).map((project, index) =>\r\n                            <div\r\n                                key={index}\r\n                                className={'gallery-slide more-slides'}\r\n                            >\r\n                                <Link to={'/projects'} onClick={() => setSingleProject(index + 3)}>\r\n                                    <img className={'gallery-image'} alt={'as'} src={project.main_image.url}\r\n                                         onClick={() => setSingleProject(index)}\r\n                                    />\r\n                                </Link>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </Collapsible>\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Gallery;\r\n\r\n// const mapStateToProps = (state) => ({\r\n//     projectsList: getProjectsList(state),\r\n// });\r\n//\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//     addProjectList: (values) => dispatch(addProjectList(values)),\r\n//     setSingleProject: (projectId) => dispatch(setSingleProject(projectId)),\r\n// });\r\n//\r\n// export default connect(\r\n//     mapStateToProps,\r\n//     mapDispatchToProps\r\n// )(Gallery)\r\n"]},"metadata":{},"sourceType":"module"}