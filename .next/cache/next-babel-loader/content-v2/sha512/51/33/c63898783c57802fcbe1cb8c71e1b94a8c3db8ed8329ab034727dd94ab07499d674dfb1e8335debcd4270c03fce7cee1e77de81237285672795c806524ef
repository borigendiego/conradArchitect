{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport AppContext from '../components/AppContext'; //Styles\n\nimport '../css/global-styles.scss';\nimport { getProjects } from '../API';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: projects,\n    1: setProjects\n  } = useState([]);\n  useEffect(() => {\n    async function fetchProjectsAPI() {\n      let response = await getProjects(); //response = await response.json()\n\n      setProjects(response);\n    }\n\n    fetchProjectsAPI();\n  }, []);\n  return /*#__PURE__*/_jsx(AppContext.Provider, {\n    value: {\n      projectsData: projects\n    },\n    children: /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))\n  });\n}\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}